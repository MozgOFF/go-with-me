# Generated by Django 3.0.4 on 2020-03-28 19:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('is_active', models.BooleanField(verbose_name='Is active')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Event title')),
                ('description', models.CharField(max_length=1024, verbose_name='Brief description')),
                ('start', models.DateTimeField(verbose_name='Event begining')),
                ('end', models.DateTimeField(verbose_name='Event ending')),
                ('price', models.CharField(max_length=20, verbose_name='Price')),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10, verbose_name='Latitude')),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10, verbose_name='Longitude')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('categories', models.ManyToManyField(related_name='events', to='event.Category')),
            ],
        ),
    ]
